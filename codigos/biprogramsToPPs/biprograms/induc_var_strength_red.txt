meth bip (⌊b : int⌋) (⌊c : int⌋) (⌊n : int⌋) : ⌊int⌋
    requires { b ¨= b && c ¨= c && n ¨= n }
=
    ⌊i := 0⌋;
    j := 0; | j := c;
    ⌊x := 0⌋;

    while (⌊i < n⌋) do
        invariant { ⌊i >= 0⌋ }
        invariant { skip | j = i * b + c }
        invariant { i ¨= i }
        invariant { x ¨= x }
        variant { ⌊n - i⌋ }
        j := i * b + c; | x := x + j;
        x := x + j;     | j := j + b;
        ⌊i := i + 1⌋
    done;
    ⌊x⌋
  