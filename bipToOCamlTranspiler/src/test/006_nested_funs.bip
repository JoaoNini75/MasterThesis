let test1_outer () : int = begin
  let x = 10 in

  let test1_inner (i : int) : int = begin
    x * i 
  end
  (*@ ensures true *)
	in

  let i = 2 in
  test1_inner (i)
end
(*@ ensures true *) 

let funs_nested (x) = begin

  let fun_inner (i) = begin
		let i = ref 0 in
		while !i < 3 do
			i := !i + 2;
			i := !i - 1
		done;
		!i
  end
	(*@ ensures true *)
	in

  fun_inner (x)
end
(*@ ensures true *) 
