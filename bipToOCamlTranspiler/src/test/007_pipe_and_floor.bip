let p2 () = begin
	let x = |_ ref 1 _| in
	let y = |_ ref 2 _| in
	x := !x + 1 <|> y := !y + 2;
	let z = ref 22 in
	!z
end
(*@ ensures true *)

let rec bip_short (b : int <|> b : int) : int <|> int = begin
	let x = ref 0 <|> ref 1 in
	!x <|> !x 
end
(*@ ensures true *)

let bip (|_b : int_|) : |_int_| = begin
	(* comment1 *)
	let i = ref 0 in
	let j = ref 0 <|> ref b in
	let x = |_ ref 0 _| in
	|_ !x _|
end
(*@ ensures true *)

let bip2 (x, y) = begin
	let z = |_ ref -1 _| in
	let b = not (true && false) in
	z := |_ !z + 1 _|;
	b
end
(*@ ensures true *)

let bip_if2 (|_c : bool _|) : |_int_| = begin
	if |_c_| 
	then begin |_1_| end
	else begin |_0_| end
end
(*@ ensures true *)

let bip_if_long (|_ x1 : int _|, |_ y1 : bool _|) : |_ int _| = begin
	let x2 = |_ x1 * 2 _| in
	let y2 = |_ 34 _| in
	if |_ y2 > x2 _| then begin
		|_ x2 + y2 _|
	end else begin
		|_ x2 - y2 _|
	end
end
(*@ ensures true *)

let match_test2 (|_ x : int _|) : |_ int _| = begin
	let a = 1 <|> 1 in

	let b = |_ (
		match x with
		| 0 -> 10
		| 1 -> 11
		| _ -> -1 
	) _| in

	a + b <|> a + b
end
(*@ ensures true *)
